{
    "modulo": "JavaScript Avanzado",
    "clase": "Principios SOLID",
    "descripcion": "Guía para escribir código limpio, mantenible y escalable.",
    "temas": [
        {
            "titulo": "¿Qué es SOLID?",
            "contenido": "SOLID es un acrónimo que representa cinco principios de diseño de software orientado a objetos. Aunque originalmente se usaron en lenguajes como Java o C#, también son muy útiles en JavaScript. Aplicar SOLID ayuda a que el código sea más comprensible, flexible, fácil de mantener y escalar."
        },
        {
            "titulo": "S - Principio de Responsabilidad Única (Single Responsibility)",
            "contenido": "Cada función, clase o módulo debe tener una única responsabilidad o razón para cambiar. Esto hace que el código sea más fácil de probar, depurar y mantener."
        },
        {
            "titulo": "O - Principio Abierto/Cerrado (Open/Closed)",
            "contenido": "El código debe estar abierto a la extensión, pero cerrado a la modificación. Es decir, debemos poder agregar funcionalidades nuevas sin cambiar el código existente."
        },
        {
            "titulo": "L - Principio de Sustitución de Liskov",
            "contenido": "Las clases derivadas deben poder sustituir a sus clases base sin alterar el comportamiento del sistema. Si una subclase no cumple las promesas de su clase padre, puede romper la lógica del programa."
        },
        {
            "titulo": "I - Principio de Segregación de Interfaces",
            "contenido": "Es preferible tener muchas interfaces pequeñas y específicas a una sola grande. En JavaScript, esto se aplica creando funciones o módulos especializados, de modo que cada objeto solo use lo que necesita."
        },
        {
            "titulo": "D - Principio de Inversión de Dependencias",
            "contenido": "Los módulos de alto nivel no deben depender de módulos de bajo nivel directamente, sino de abstracciones. En JavaScript esto se logra pasando funciones como parámetros, o usando inyección de dependencias."
        }
    ]
}