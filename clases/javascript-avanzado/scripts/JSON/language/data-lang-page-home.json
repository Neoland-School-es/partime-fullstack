{
    "modulo": "JavaScript Avanzado",
    "descripcion": "Este módulo enseña herramientas y conceptos modernos de JavaScript para escribir código más profesional, organizado y fácil de mantener.",
    "temas": [
        {
            "titulo": "Herramientas de desarrollo",
            "contenido": "Aprender a usar DevTools del navegador, linters como ESLint y configuraciones básicas para mejorar el código mientras lo escribimos."
        },
        {
            "titulo": "Control de versiones con Git",
            "contenido": "Uso de Git con submódulos para manejar proyectos relacionados o dividir el código en partes organizadas."
        },
        {
            "titulo": "Principios SOLID",
            "contenido": "Conjunto de reglas para escribir código más limpio: una sola responsabilidad, código extensible sin modificar lo que ya funciona, uso correcto de herencia, separación de funciones y bajo acoplamiento."
        },
        {
            "titulo": "Programación Orientada a Objetos",
            "contenido": "Uso de clases, herencia, encapsulamiento y otros conceptos para organizar mejor el código."
        },
        {
            "titulo": "Patrones de diseño",
            "contenido": "Soluciones comunes a problemas frecuentes: como Singleton, Factory, Observer o Strategy."
        },
        {
            "titulo": "Arquitectura y capas",
            "contenido": "Dividir el código en capas (como interfaz, lógica y datos) para hacerlo más claro y fácil de mantener."
        },
        {
            "titulo": "Inyección de dependencias",
            "contenido": "Técnica para evitar que las partes del código estén demasiado conectadas entre sí, facilitando pruebas y cambios."
        },
        {
            "titulo": "Módulos de JavaScript",
            "contenido": "Separar el código en archivos y conectarlos con `import` y `export` para tener mejor organización."
        },
        {
            "titulo": "Conceptos avanzados de JavaScript",
            "contenido": "Temas importantes del lenguaje como closures, hoisting, this, call, apply, bind, coerción de tipos y contexto de ejecución."
        },
        {
            "titulo": "Tipado",
            "contenido": "Uso de herramientas como JSDoc o TypeScript para indicar qué tipo de datos usamos y evitar errores."
        },
        {
            "titulo": "Reactividad",
            "contenido": "Cómo manejar cambios en tiempo real usando programación reactiva y flujos de datos observables."
        },
        {
            "titulo": "Gestión de estado con Redux",
            "contenido": "Controlar el estado de la app en un solo lugar con Redux, para que sea más fácil de mantener y escalar."
        },
        {
            "titulo": "WebSockets",
            "contenido": "Comunicación en tiempo real entre el cliente y el servidor, ideal para chats o notificaciones en vivo."
        },
        {
            "titulo": "Testing",
            "contenido": "Crear pruebas para asegurarse de que el código funciona como se espera, usando herramientas como Jest o Testing Library."
        },
        {
            "titulo": "Progressive Web Apps (PWA)",
            "contenido": "Mejorar una app web para que funcione sin conexión, se cargue rápido y se pueda instalar como una app nativa."
        }
    ]
}